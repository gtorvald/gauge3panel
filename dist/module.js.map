{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./SimplePanel.tsx","webpack:///./module.ts","webpack:///external \"@grafana/data\"","webpack:///external \"react\""],"names":[],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.ts\");\n","import React from \"react\";\nimport { PanelProps } from \"@grafana/data\";\nimport { SimpleOptions } from \"types\";\n\nconst colorGray = \"#202226\";\nconst colorGreen = \"#73bf69\";\n\ninterface Props extends PanelProps<SimpleOptions> {}\n\nexport const SimplePanel: React.FC<Props> = ({\n  options,\n  data,\n  width,\n  height\n}) => {\n  let firstColor: string;\n  let secondColor: string;\n  let thirdColor: string;\n  switch (options.firstColor) {\n    case \"red\":\n      firstColor = \"#ed485b\";\n      break;\n    case \"green\":\n      firstColor = \"#73bf69\";\n      break;\n    case \"blue\":\n      firstColor = \"#5794f2\";\n      break;\n    case \"orange\":\n      firstColor = \"#f3973e\";\n      break;\n    case \"purple\":\n      firstColor = \"#b877d9\";\n      break;\n    case \"yellow\":\n      firstColor = \"#fadf4b\";\n      break;\n  }\n  switch (options.secondColor) {\n    case \"red\":\n      secondColor = \"#ed485b\";\n      break;\n    case \"green\":\n      secondColor = \"#73bf69\";\n      break;\n    case \"blue\":\n      secondColor = \"#5794f2\";\n      break;\n    case \"orange\":\n      secondColor = \"#f3973e\";\n      break;\n    case \"purple\":\n      secondColor = \"#b877d9\";\n      break;\n    case \"yellow\":\n      secondColor = \"#fadf4b\";\n      break;\n  }\n  switch (options.thirdColor) {\n    case \"red\":\n      thirdColor = \"#ed485b\";\n      break;\n    case \"green\":\n      thirdColor = \"#73bf69\";\n      break;\n    case \"blue\":\n      thirdColor = \"#5794f2\";\n      break;\n    case \"orange\":\n      thirdColor = \"#f3973e\";\n      break;\n    case \"purple\":\n      thirdColor = \"#b877d9\";\n      break;\n    case \"yellow\":\n      thirdColor = \"#fadf4b\";\n      break;\n  }\n  const scale = Math.min(height, width / 2);\n  const heightUse = scale * 0.8;\n  const outRadius = scale * 0.75;\n  const outWidth = Math.min(5, scale / 45);\n  const mainWidth = Math.min(15, scale / 15);\n  const firstRadius = outRadius - outWidth * 2 - 1;\n  const secondRadius = firstRadius - mainWidth - 1;\n  const thirdRadius = secondRadius - mainWidth - 1;\n  const fontSizeValue = Math.min(45, scale / 5);\n  const fontSizeBaseName = Math.min(15, scale / 15);\n  const mainArc = 210 / 360;\n  let firstValue = 0;\n  let secondValue = 0;\n  let thirdValue = 0;\n  let firstBaseName: string | undefined = \"null base\";\n  let secondBaseName: string | undefined = \"null base\";\n  let thirdBaseName: string | undefined = \"null base\";\n  const rotate = \"rotate(-195 \" + width / 2 + \" \" + heightUse + \")\";\n  const radii = data.series\n    .filter(series => series.refId === \"A\")\n    .map(series => {\n      firstBaseName = series.name;\n      return series;\n    })\n    .map(series => series.fields.find(field => field.type === \"number\"))\n    .map(field => field?.values.get(field.values.length - 1));\n  const radiiB = data.series\n    .filter(series => series.refId === \"B\")\n    .map(series => {\n      secondBaseName = series.name;\n      return series;\n    })\n    .map(series => series.fields.find(field => field.type === \"number\"))\n    .map(field => field?.values.get(field.values.length - 1));\n  const radiiC = data.series\n    .filter(series => series.refId === \"C\")\n    .map(series => {\n      thirdBaseName = series.name;\n      return series;\n    })\n    .map(series => series.fields.find(field => field.type === \"number\"))\n    .map(field => field?.values.get(field.values.length - 1));\n  return (\n    <svg\n      version=\"1.1\"\n      baseProfile=\"full\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n    >\n      <g transform={rotate}>\n        <circle\n          id=\"fon\"\n          r={outRadius}\n          cx={width / 2}\n          cy={heightUse}\n          stroke={colorGreen}\n          stroke-width={outWidth}\n          stroke-dasharray={outRadius * Math.PI * 2 * mainArc}\n          fill=\"none\"\n        />\n        <circle\n          id=\"fon\"\n          r={firstRadius}\n          cx={width / 2}\n          cy={heightUse}\n          stroke={colorGray}\n          stroke-width={mainWidth}\n          stroke-dasharray={firstRadius * Math.PI * 2 * mainArc}\n          fill=\"none\"\n        />\n        <circle\n          id=\"fon\"\n          r={secondRadius}\n          cx={width / 2}\n          cy={heightUse}\n          stroke={colorGray}\n          stroke-width={mainWidth}\n          stroke-dasharray={secondRadius * Math.PI * 2 * mainArc}\n          fill=\"none\"\n        />\n        <circle\n          id=\"fon\"\n          r={thirdRadius}\n          cx={width / 2}\n          cy={heightUse}\n          stroke={colorGray}\n          stroke-width={mainWidth}\n          stroke-dasharray={thirdRadius * Math.PI * 2 * mainArc}\n          fill=\"none\"\n        />\n        {radii.map(value => {\n          if (value < options.firstMin) {\n            value = options.firstMin;\n          } else if (value > options.firstMax) {\n            value = options.firstMax;\n          }\n          firstValue = Math.round(value);\n          let arc =\n            (firstValue - options.firstMin) /\n            (options.firstMax - options.firstMin);\n          let dashValue = firstRadius * Math.PI * 2 * mainArc * arc;\n          let dashBalance = firstRadius * Math.PI * 2 - dashValue;\n          let dashArray = dashValue + \" \" + dashBalance;\n          return (\n            <circle\n              id=\"fon\"\n              r={firstRadius}\n              cx={width / 2}\n              cy={heightUse}\n              stroke={firstColor}\n              stroke-width={mainWidth}\n              stroke-dasharray={dashArray}\n              fill=\"none\"\n            />\n          );\n        })}\n        {radiiB.map(value => {\n          if (value < options.secondMin) {\n            value = options.secondMin;\n          } else if (value > options.secondMax) {\n            value = options.secondMax;\n          }\n          secondValue = Math.round(value);\n          let arc =\n            (secondValue - options.secondMin) /\n            (options.secondMax - options.secondMin);\n          let dashValue = secondRadius * Math.PI * 2 * mainArc * arc;\n          let dashBalance = secondRadius * Math.PI * 2 - dashValue;\n          let dashArray = dashValue + \" \" + dashBalance;\n          return (\n            <circle\n              id=\"fon\"\n              r={secondRadius}\n              cx={width / 2}\n              cy={heightUse}\n              stroke={secondColor}\n              stroke-width={mainWidth}\n              stroke-dasharray={dashArray}\n              fill=\"none\"\n            />\n          );\n        })}\n        {radiiC.map(value => {\n          if (value < options.thirdMin) {\n            value = options.thirdMin;\n          } else if (value > options.thirdMax) {\n            value = options.thirdMax;\n          }\n          thirdValue = Math.round(value);\n          let arc =\n            (thirdValue - options.thirdMin) /\n            (options.thirdMax - options.thirdMin);\n          let dashValue = thirdRadius * Math.PI * 2 * mainArc * arc;\n          let dashBalance = thirdRadius * Math.PI * 2 - dashValue;\n          let dashArray = dashValue + \" \" + dashBalance;\n          return (\n            <circle\n              id=\"fon\"\n              r={thirdRadius}\n              cx={width / 2}\n              cy={heightUse}\n              stroke={thirdColor}\n              stroke-width={mainWidth}\n              stroke-dasharray={dashArray}\n              fill=\"none\"\n            />\n          );\n        })}\n      </g>\n      <g>\n        <text\n          x={width / 2 - fontSizeValue}\n          y={outRadius - fontSizeValue * 0.5}\n          text-anchor=\"middle\"\n          font-size={fontSizeValue}\n          fill={firstColor}\n        >\n          {firstValue}\n        </text>\n        <text\n          x={width / 2 - fontSizeValue}\n          y={outRadius - fontSizeValue * 0.5 + mainWidth}\n          text-anchor=\"middle\"\n          font-size={fontSizeBaseName}\n          fill={firstColor}\n        >\n          {firstBaseName}\n        </text>\n        <text\n          x={width / 2 + fontSizeValue}\n          y={outRadius - fontSizeValue * 0.5}\n          text-anchor=\"middle\"\n          font-size={fontSizeValue}\n          fill={secondColor}\n        >\n          {secondValue}\n        </text>\n        <text\n          x={width / 2 + fontSizeValue}\n          y={outRadius - fontSizeValue * 0.5 + mainWidth}\n          text-anchor=\"middle\"\n          font-size={fontSizeBaseName}\n          fill={secondColor}\n        >\n          {secondBaseName}\n        </text>\n        <text\n          x={width / 2}\n          y={outRadius + fontSizeValue * 0.75}\n          text-anchor=\"middle\"\n          font-size={fontSizeValue}\n          fill={thirdColor}\n        >\n          {thirdValue}\n        </text>\n        <text\n          x={width / 2}\n          y={outRadius + fontSizeValue * 0.75 + mainWidth}\n          text-anchor=\"middle\"\n          font-size={fontSizeBaseName}\n          fill={thirdColor}\n        >\n          {thirdBaseName}\n        </text>\n      </g>\n    </svg>\n  );\n};\n","import { PanelPlugin } from \"@grafana/data\";\nimport { SimpleOptions } from \"./types\";\nimport { SimplePanel } from \"./SimplePanel\";\n\nexport const plugin = new PanelPlugin<SimpleOptions>(\n  SimplePanel\n).setPanelOptions(builder => {\n  return (\n    builder\n      .addNumberInput({\n        path: \"firstMin\",\n        name: \"Min for first database\",\n        defaultValue: 0\n      })\n      .addNumberInput({\n        path: \"firstMax\",\n        name: \"Max fo first database\",\n        defaultValue: 100\n      })\n      .addNumberInput({\n        path: \"secondMin\",\n        name: \"Min fo second database\",\n        defaultValue: 0\n      })\n      .addNumberInput({\n        path: \"secondMax\",\n        name: \"Max fo second database\",\n        defaultValue: 100\n      })\n      .addNumberInput({\n        path: \"thirdMin\",\n        name: \"Min fo third database\",\n        defaultValue: 0\n      })\n      .addNumberInput({\n        path: \"thirdMax\",\n        name: \"Max fo third database\",\n        defaultValue: 100\n      })\n      // .addTextInput({\n      //   path: 'text',\n      //   name: 'Simple text option',\n      //   description: 'Description of panel option',\n      //   defaultValue: 'Default value of text input option',\n      // })\n      // .addBooleanSwitch({\n      //   path: 'showSeriesCount',\n      //   name: 'Show series counter',\n      //   defaultValue: false,\n      // })\n      // .addRadio({\n      //   path: 'seriesCountSize',\n      //   defaultValue: 'sm',\n      //   name: 'Series counter size',\n      //   settings: {\n      //     options: [\n      //       {\n      //         value: 'sm',\n      //         label: 'Small',\n      //       },\n      //       {\n      //         value: 'md',\n      //         label: 'Medium',\n      //       },\n      //       {\n      //         value: 'lg',\n      //         label: 'Large',\n      //       },\n      //     ],\n      //   },\n      //   showIf: config => config.showSeriesCount,\n      // })\n      .addRadio({\n        path: \"firstColor\",\n        name: \"Color of first database\",\n        defaultValue: \"yellow\",\n        settings: {\n          options: [\n            {\n              value: \"red\",\n              label: \"Red\"\n            },\n            {\n              value: \"green\",\n              label: \"Green\"\n            },\n            {\n              value: \"blue\",\n              label: \"Blue\"\n            },\n            {\n              value: \"yellow\",\n              label: \"Yellow\"\n            },\n            {\n              value: \"orange\",\n              label: \"Orange\"\n            },\n            {\n              value: \"purple\",\n              label: \"Purple\"\n            }\n          ]\n        }\n      })\n      .addRadio({\n        path: \"secondColor\",\n        name: \"Color of second database\",\n        defaultValue: \"blue\",\n        settings: {\n          options: [\n            {\n              value: \"red\",\n              label: \"Red\"\n            },\n            {\n              value: \"green\",\n              label: \"Green\"\n            },\n            {\n              value: \"blue\",\n              label: \"Blue\"\n            },\n            {\n              value: \"yellow\",\n              label: \"Yellow\"\n            },\n            {\n              value: \"orange\",\n              label: \"Orange\"\n            },\n            {\n              value: \"purple\",\n              label: \"Purple\"\n            }\n          ]\n        }\n      })\n      .addRadio({\n        path: \"thirdColor\",\n        name: \"Color of third database\",\n        defaultValue: \"red\",\n        settings: {\n          options: [\n            {\n              value: \"red\",\n              label: \"Red\"\n            },\n            {\n              value: \"green\",\n              label: \"Green\"\n            },\n            {\n              value: \"blue\",\n              label: \"Blue\"\n            },\n            {\n              value: \"yellow\",\n              label: \"Yellow\"\n            },\n            {\n              value: \"orange\",\n              label: \"Orange\"\n            },\n            {\n              value: \"purple\",\n              label: \"Purple\"\n            }\n          ]\n        }\n      })\n  );\n});\n","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_data__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;"],"sourceRoot":""}